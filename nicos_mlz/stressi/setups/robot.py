description = 'STRESS-SPEC setup with robot'

group = 'basic'

includes = [
    'standard',
]

modules = ['nicos_mlz.stressi.commands']

sysconfig = dict(
    datasinks = ['caresssink'],
)

tangobase = 'tango://motorbox02.stressi.frm2.tum.de:10000/box/'

nameservice = 'stressictrl.stressi.frm2.tum.de'

caresspath = '/opt/caress'
toolpath = '/opt/caress'


devices = dict(
    tths = device('nicos.devices.generic.DeviceAlias'),
    omgs = device('nicos.devices.generic.DeviceAlias'),
    xt = device('nicos.devices.generic.DeviceAlias'),
    yt = device('nicos.devices.generic.DeviceAlias'),
    zt = device('nicos.devices.generic.DeviceAlias'),
    chis = device('nicos.devices.generic.DeviceAlias'),
    phis = device('nicos.devices.generic.DeviceAlias'),

    dummyO = device('nicos.devices.vendor.caress.EKFMotor',
        description = 'OMGS feedback device for the robot',
        fmtstr = '%.2f',
        unit = 'deg',
        coderoffset = 0,  # -1229.1539993286133 on VME
        abslimits = (0, 140),
        nameserver = '%s' % nameservice,
        config = 'DUMMYO 500 TANGO.caress_object tango://motorbox02:10000/box/channel4/coder',
        absdev = False,
        visibility = (),
    ),
    dummyT = device('nicos.devices.vendor.caress.EKFMotor',
        description = 'TTHS feedback device for the robot',
        fmtstr = '%.2f',
        unit = 'deg',
        coderoffset = 0,  # 1244.04814453125 on VME
        abslimits = (0, 140),
        nameserver = '%s' % nameservice,
        absdev = False,
        config = 'DUMMYT 500 TANGO.caress_object tango://motorbox02:10000/box/channel3/coder',
        visibility = (),
    ),
    # *** Roboter Kath ***
    robx = device('nicos.devices.generic.Axis',
        description = 'Robot X-axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'mm',
            config = 'ROBX 500 RoboterX.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-9999., 9999.),
            absdev = False,
            speedmotor = 'robsl',
        ),
        precision = 0.1,
        maxtries = 10,
        visibility = (),
    ),
    roby = device('nicos.devices.generic.Axis',
        description = 'Robot Y-Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'mm',
            config = 'ROBY 500 RoboterY.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-9999., 9999.),
            absdev = False,
            speedmotor = 'robsl',
        ),
        precision = 0.1,
        maxtries = 10,
        visibility = (),
    ),
    robz = device('nicos.devices.generic.Axis',
        description = 'Robot Z-Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'mm',
            config = 'ROBZ 500 RoboterZ.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-9999., 9999.),
            absdev = False,
            speedmotor = 'robsl',
        ),
        precision = 0.1,
        maxtries = 10,
        visibility = (),
    ),
    roba = device('nicos.devices.generic.Axis',
        description = 'Robot A Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBA 500 RoboterA.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-180, 180),
            absdev = False,
            speedmotor = 'robsr',
        ),
        precision = 0.1,
        maxtries = 10,
        visibility = (),
    ),
    robb = device('nicos.devices.generic.Axis',
        description = 'Robot B Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBB 500 RoboterB.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-360, 360),
            absdev = False,
            speedmotor = 'robsr',
        ),
        precision = 0.1,
        maxtries = 10,
    ),
    robc = device('nicos.devices.generic.Axis',
        description = 'Robot C Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBC 500 RoboterC.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-720, 720),
            absdev = False,
            visibility = (),
            speedmotor = 'robsr',
        ),
        precision = 0.1,
        maxtries = 10,
        visibility = (),
    ),

    # *** Roboter Joint ***
    robj1 = device('nicos.devices.generic.Axis',
        description = 'Robot J1 Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBJ1 500 RoboterJ1.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-160, 160),
            absdev = False,
            speedmotor = 'robsj',
        ),
        precision = 0.1,
        maxtries = 10,
    ),
    robj2 = device('nicos.devices.generic.Axis',
        description = 'Robot J2 Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBJ2 500 RoboterJ2.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-137.5, 137.5),
            absdev = False,
            speedmotor = 'robsj',
        ),
        precision = 0.1,
        maxtries = 10,
    ),
    robj3 = device('nicos.devices.generic.Axis',
        description = 'Robot J2 Axis',
        motor = device('nicos_mlz.stressi.devices.robot.RobotMotor',
            fmtstr = '%.2f',
            unit = 'deg',
            config = 'ROBJ3 500 RoboterJ3.Caress_Object',
            coderoffset = 0,
            nameserver = '%s' % nameservice,
            abslimits = (-150, 150),
            absdev = False,
            speedmotor = 'robsj',
        ),
        precision = 0.1,
        maxtries = 10,
    ),
    robj4 = device('nicos_mlz.stressi.devices.robot.RobotMotor',
        description = 'Robot J4',
        fmtstr = '%.2f',
        unit = 'deg',
        config = 'ROBJ4 500 RoboterJ4.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (-270, 270),
        absdev = False,
        speedmotor = 'robsj',
    ),
    robj5 = device('nicos_mlz.stressi.devices.robot.RobotMotor',
        description = 'Robot J5',
        fmtstr = '%.2f',
        unit = 'deg',
        config = 'ROBJ5 500 RoboterJ5.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (-105, 120),
        absdev = False,
        speedmotor = 'robsj',
    ),
    robj6 = device('nicos_mlz.stressi.devices.robot.RobotMotor',
        description = 'Robot J6',
        fmtstr = '%.2f',
        unit = 'deg',
        config = 'ROBJ6 500 RoboterJ6.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (-15000, 15000),
        absdev = False,
        speedmotor = 'robsj',
    ),
    # *** Roboter Tool Number ***
    robt = device('nicos.devices.vendor.caress.Motor',
        description = 'Robot T (tool number)',
        fmtstr = '%d',
        unit = '',
        config = 'ROBT 500 RoboterToolNumber.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (0, 1000),
        absdev = False,
    ),
    robs = device('nicos.devices.vendor.caress.Motor',
        description = 'Robot S (sample number)',
        fmtstr = '%d',
        unit = '',
        config = 'ROBS 500 RoboterSampleNumber.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (0, 100),
        absdev = False,
    ),
    robsj = device('nicos.devices.vendor.caress.Motor',
        description = 'Robot SJ (% of maximum speed)',
        fmtstr = '%.2f',
        unit = '%',
        config = 'ROBSJ 500 RoboterSpeedJoint.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (0, 20),
        absdev = False,
        visibility = (),
    ),
    robsl = device('nicos.devices.vendor.caress.Motor',
        description = 'Robot SL (linear speed)',
        fmtstr = '%.2f',
        unit = 'mm/s',
        config = 'ROBSL 500 RoboterSpeedLinear.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (0, 1000),
        absdev = False,
        visibility = (),
    ),
    robsr = device('nicos.devices.vendor.caress.Motor',
        description = 'Robot SR (rotation speed)',
        fmtstr = '%.2f',
        unit = 'deg/s',
        config = 'ROBSR 500 RoboterSpeedRotation.Caress_Object',
        coderoffset = 0,
        nameserver = '%s' % nameservice,
        abslimits = (0, 1000),
        absdev = False,
        visibility = (),
    ),
    # *** Roboter Standard Values ***
    omgs_r_m = device('nicos.devices.entangle.Motor',
        description = 'TTHS motor',
        tangodevice = tangobase + 'channel4/motor',
        visibility = (),
    ),
    omgs_r_c = device('nicos.devices.entangle.Sensor',
        description = 'TTHS coder',
        tangodevice = tangobase + 'channel4/coder',
        visibility = (),
    ),
    omgs_r = device('nicos.devices.generic.Axis',
        description = 'Robot OMGS',
        motor = 'omgs_r_m',
        coder = 'omgs_r_c',
        precision = 0.01,
    ),
    tths_r_m = device('nicos.devices.entangle.Motor',
        description = 'TTHS motor',
        tangodevice = tangobase + 'channel3/motor',
        visibility = (),
    ),
    tths_r_c = device('nicos.devices.entangle.Sensor',
        description = 'TTHS coder',
        tangodevice = tangobase + 'channel3/coder',
        visibility = (),
    ),
    tths_r = device('nicos.devices.generic.Axis',
        description = 'TTHR',
        motor = 'tths_r_m',
        coder = 'tths_r_c',
        precision = 0.01,
    ),
    roba_t = device('nicos_mlz.stressi.devices.wavelength.TransformedMoveable',
        description = 'Transformed roba device',
        dev = 'roba',
        informula = '180. - x',
        outformula = '180. - x',
        precision = 0.001,
        visibility = (),
    ),
)

alias_config = {
    'tths': {'dummyT': 200, 'tths_r': 100,},
    'omgs': {'dummyO': 200, 'omgs_r': 100,},
    'chis': {'roba_t': 200,},
    'phis': {'robc': 200,},
    'xt': {'robx': 200,},
    'yt': {'roby': 200,},
    'zt': {'robz': 200,},
}

# The dummyO and dummyT must be initialized for the CARESS robot service
startupcode = """
CreateDevice('dummyO')
CreateDevice('dummyT')
"""
