description = 'Detector CARESS HWB Devices'

group = 'lowlevel'

includes = [
    'primaryslit_manual',
    'sampletable',
]

excludes = ['detector']

devices = dict(
    mon = device('nicos.devices.generic.VirtualCounter',
        description = 'Monitor (MON)',
        fmtstr = '%d',
        type = 'monitor',
        visibility = (),
    ),
    tim1 = device('nicos.devices.mcstas.McStasTimer',
        description = 'McStas virtual neutron counts timer channel',
        mcstas = 'mcstas',
        fmtstr = '%.2f',
        unit = 's',
        visibility = (),
    ),
    t_mon = device('nicos.devices.generic.VirtualCounter',
        description = 'Transmission Monitor',
        fmtstr = '%d',
        type = 'monitor',
        countrate = 100,
        visibility = (),
    ),
    mcstas = device('nicos_virt_mlz.stressi.devices.detector.McStasSimulation',
        description = 'McStas simulation',
        mcstasprog = 'stressi_fast2',
        neutronspersec = {
            'stressictrl': 5.3e5,
            'stressictrl02': 2.7e6,
            'localhost': 1.12e5,
        },
        intensityfactor = 1e14,
        sample = 'Sample',
        xprime = 'psw',
        yprime = 'psh',
        l_ambda = 'wav',
        xpos = 'xt',
        ypos = 'yt',
        zpos = 'zt',
        # phi = 'phis',
        # chi = 'chis',
        omega = 'omgs',
        theta2 = 'tths',
        force = 'teload',
    ),
    image = device('nicos.devices.mcstas.McStasImage',
        description = 'Image data device',
        mcstas = 'mcstas',
        mcstasfile = 'PSD_STRESSI_total.psd',
        size = (256, 256),
        fmtstr = '%d',
        unit = 'cts',
        pollinterval = 86400,
        visibility = (),
    ),
    roi = device('nicos.devices.generic.RectROIChannel',
        description = 'ROI',
        roi = (122, 50, 12, 140),
    ),
    adet = device('nicos.devices.generic.Detector',
        description = 'Classical detector with single channels',
        timers = ['tim1'],
        monitors = ['mon'],
        counters = ['t_mon', 'roi',],
        images = ['image'],
        pollinterval = None,
        liveinterval = 0.5,
        postprocess = [
            ('roi', 'image'),
        ],
    ),
    ysd = device('nicos.devices.generic.ManualMove',
        description = 'distance sample detector',
        default = 100.,
        fmtstr = '%.2f',
        unit = 'mm',
        abslimits = (0, 1100.),
    ),
)

startupcode = """
SetDetectors(adet)
"""
