description = 'Kompass setup for spherical polarisation analysis mode'

group = 'optional'

tango_base = 'tango://kompasshw.kompass.frm2.tum.de:10000/kompass/'
cryopad_base = 'tango://kompasshw.kompass.frm2.tum.de:10000/cryopad/'

devices = dict(
    radial_coil1 = device('nicos.devices.entangle.PowerSupply',
        description = "kepco power supply 1",
        tangodevice = tango_base + 'kepco/current1',
        fmtstr = '%.3f',
    ),
    radial_coil1_voltage = device('nicos.devices.entangle.Sensor',
        description = "kepco power supply 1 voltage",
        tangodevice = tango_base + 'kepco/voltage1',
        fmtstr = '%.3f',
    ),
    axial_coil1 = device('nicos.devices.entangle.PowerSupply',
        description = "kepco power supply 2",
        tangodevice = tango_base + 'kepco/current2',
        fmtstr = '%.3f',
    ),
    axial_coil1_voltage = device('nicos.devices.entangle.Sensor',
        description = "kepco power supply 2 voltage",
        tangodevice = tango_base + 'kepco/voltage2',
        fmtstr = '%.3f',
    ),
    radial_coil2 = device('nicos.devices.entangle.PowerSupply',
        description = "kepco power supply 3",
        tangodevice = tango_base + 'kepco/current3',
        fmtstr = '%.3f',
    ),
    radial_coil2_voltage = device('nicos.devices.entangle.Sensor',
        description = "kepco power supply 3 voltage",
        tangodevice = tango_base + 'kepco/voltage3',
        fmtstr = '%.3f',
    ),
    axial_coil2 = device('nicos.devices.entangle.PowerSupply',
        description = "kepco power supply 4",
        tangodevice = tango_base + 'kepco/current4',
        fmtstr = '%.3f',
    ),
    axial_coil2_voltage = device('nicos.devices.entangle.Sensor',
        description = "kepco power supply 4 voltage",
        tangodevice = tango_base + 'kepco/voltage4',
        fmtstr = '%.3f',
    ),
    nutator1 = device('nicos.devices.generic.Axis',
        description = 'nutator 1 (facing sample)',
        motor = device('nicos.devices.entangle.Motor',
            tangodevice = tango_base + 'aircontrol/plc_nutator_in_mot',
            fmtstr = '%.4f',
            visibility = (),
        ),
        coder = device('nicos.devices.entangle.Sensor',
            tangodevice = tango_base + 'aircontrol/plc_nutator_in_enc',
            fmtstr = '%.4f',
            visibility = (),
        ),
        fmtstr = '%.3f',
        precision = 0.001,
    ),
    nutator2 = device('nicos.devices.generic.Axis',
        description = 'nutator 2 (facing analyser)',
        motor = device('nicos.devices.entangle.Motor',
            tangodevice = tango_base + 'aircontrol/plc_nutator_out_mot',
            fmtstr = '%.4f',
            visibility = (),
        ),
        coder = device('nicos.devices.entangle.Sensor',
            tangodevice = tango_base + 'aircontrol/plc_nutator_out_enc',
            fmtstr = '%.4f',
            visibility = (),
        ),
        fmtstr = '%.3f',
        precision = 0.001,
    ),

    cryopad_ln2 = device('nicos.devices.entangle.Sensor',
        description = 'Liquid nitrogen level of cryopad',
        tangodevice = cryopad_base + 'ln2mon/sensor',
        fmtstr = '%d',
        unit = '%',
    ),
    cryopad_refill = device('nicos.devices.entangle.NamedDigitalOutput',
        description = 'Liquid nitrogen refill switch of cryopad',
        tangodevice = cryopad_base + 'ln2mon/refill',
    ),
    cryopad_lhe = device('nicos.devices.entangle.Sensor',
        description = 'Liquid Helium level of cryopad',
        tangodevice = cryopad_base + 'lhemon/sensor',
        fmtstr = '%d',
        unit = '%',
    ),
    cryopad_temp = device('nicos.devices.entangle.Sensor',
        description = 'Temperature of magnetic shields of cryopad',
        tangodevice = cryopad_base + 'temp/sensor',
        fmtstr = '%.2f',
        unit = 'K',
    ),
)

startupcode="""
radial_coil1.userlimits=(-2.1, 2.1)
axial_coil1.userlimits=(-2.1, 2.1)
radial_coil2.userlimits=(-2.1, 2.1)
axial_coil2.userlimits=(-2.1, 2.1)
"""
