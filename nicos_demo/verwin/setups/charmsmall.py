description = 'Small ErWIN detector devices'

group = 'optional'

devices = dict(
    s_anode1 = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [0, 2160],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_anode2 = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [0, 2160],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_banode1 = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [0, 2160],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_edge1 = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [0, 2160],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_edge2 = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [0, 2160],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_window = device('nicos.devices.generic.VirtualMotor',
        visibility = (),
        abslimits = [-1050, 0],
        unit = 'V',
        speed = 5,
        fmtstr = '%.1f',
    ),
    s_trip = device('nicos.devices.generic.ManualSwitch',
        description = 'Trip indicator',
        states = ['', 'Tripped'],
        pollinterval = 1,
    ),
    s_hv = device('nicos_mlz.erwin.devices.HVSwitch',
        description = 'HV supply small detector',
        anodes = ['s_anode1', 's_anode2'],
        banodes = ['s_banode1'],
        edges = ['s_cathode1', 's_cathode2'],
        window = 's_window',
        mapping = {
            'on': {
                's_anode1': 2055,
                's_anode2': 2050,
                's_banode1': 2055,
                's_edge1': 100,
                's_edge2': 100,
                's_window': -1000,
                'ramp': 1.5 * 60,
            },
            'off': {
                's_anode1': 0,
                's_anode2': 0,
                's_banode1': 0,
                's_edge1': 0,
                's_edge2': 0,
                's_window': 0,
                'ramp': 6 * 60,
            },
            'safe': {
                's_anode1': 500,
                's_anode2': 500,
                's_banode1': 500,
                's_edge1': 100,
                's_edge2': 100,
                's_window': -1000,
                'ramp': 10,
            }
        },
    ),
    s_hv_offtime = device('nicos_mlz.erwin.devices.charmhv.HVOffDuration',
        description = 'Duration of small detector below operating voltage',
        hv_supply = 's_hv',
        maxage = 120,
        pollinterval = 15,
    ),
)
